(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{64:function(n,e,o){"use strict";o.r(e),o.d(e,"frontMatter",(function(){return r})),o.d(e,"metadata",(function(){return s})),o.d(e,"rightToc",(function(){return d})),o.d(e,"default",(function(){return l}));var a=o(2),t=o(6),i=(o(0),o(77)),r={id:"adding-windows",title:"Adding windows & landscapes"},s={unversionedId:"guides/adding-windows",id:"guides/adding-windows",isDocsHomePage:!1,title:"Adding windows & landscapes",description:"Wall Furniture",source:"@site/docs/guides/adding-windows.md",slug:"/guides/adding-windows",permalink:"/shroom/docs/guides/adding-windows",editUrl:"https://github.com/jankuss/shroom/edit/master/docs/docs/guides/adding-windows.md",version:"current",sidebar:"someSidebar",previous:{title:"Adding objects",permalink:"/shroom/docs/guides/adding-objects"},next:{title:"Avatar/Furniture movement animation",permalink:"/shroom/docs/guides/avatar-movement"}},d=[{value:"Wall Furniture",id:"wall-furniture",children:[]},{value:"Landscapes",id:"landscapes",children:[]}],c={rightToc:d};function l(n){var e=n.components,o=Object(t.a)(n,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,o,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"wall-furniture"},"Wall Furniture"),Object(i.b)("p",null,"To create windows, we will use a ",Object(i.b)("inlineCode",{parentName:"p"},"WallFurniture"),". A wall furniture is just like a ",Object(i.b)("inlineCode",{parentName:"p"},"FloorFurniture"),", but for walls."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),'import * as PIXI from "pixi.js";\n\nimport { Room, FloorFurniture, Avatar, Shroom } from "@jankuss/shroom";\n\nconst view = document.querySelector("#root") as HTMLCanvasElement;\nconst application = new PIXI.Application({ view });\n\nconst shroom = Shroom.create({ application, resourcePath: "./resources" });\nconst room = Room.create(shroom, {\n  tilemap: `\n    xxxxx\n    x0000\n    x0000\n    x0000\n   `,\n});\n\nconst furni1 = new WallFurniture({\n  roomX: 0,\n  roomY: 0,\n  roomZ: 0,\n  direction: 4,\n  type: "window_skyscraper",\n});\n\nconst furni2 = new WallFurniture({\n  roomX: 0,\n  roomY: 0,\n  roomZ: 0,\n  direction: 4,\n  type: "window_skyscraper",\n});\n\nroom.addRoomObject(furni1);\nroom.addRoomObject(furni2);\n\nroom.x = 100;\nroom.y = 200;\n\napplication.stage.addChild(room);\n')),Object(i.b)("h2",{id:"landscapes"},"Landscapes"),Object(i.b)("p",null,"The speciality of windows in this case, is that they can display a custom background called a ",Object(i.b)("inlineCode",{parentName:"p"},"Landscape"),". Landscapes basically are a texture applied to walls which only windows can display."),Object(i.b)("p",null,"To create a landscape, use the following code in addition to the previous example."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),'/* ...*/\n\nconst landscape = new Landscape();\nlandscape.leftTexture = loadRoomTexture("./images/left.png");\nlandscape.rightTexture = loadRoomTexture("./images/right.png");\nlandscape.color = "#ff0000";\n\nroom.addRoomObject(landscape);\n')))}l.isMDXComponent=!0}}]);